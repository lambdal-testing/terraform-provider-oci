---
subcategory: "Vulnerability Scanning"
layout: "oci"
page_title: "Oracle Cloud Infrastructure: oci_vulnerability_scanning_container_scan_recipe"
sidebar_current: "docs-oci-resource-vulnerability_scanning-container_scan_recipe"
description: |-
  Provides the Container Scan Recipe resource in Oracle Cloud Infrastructure Vulnerability Scanning service
---

# oci_vulnerability_scanning_container_scan_recipe
This resource provides the Container Scan Recipe resource in Oracle Cloud Infrastructure Vulnerability Scanning service.

Creates a new ContainerScanRecipe. A recipe determines the types of security issues that you want scanned.


## Example Usage

```hcl
resource "oci_vulnerability_scanning_container_scan_recipe" "test_container_scan_recipe" {
	#Required
	compartment_id = var.compartment_id
	scan_settings {
		#Required
		scan_level = var.container_scan_recipe_scan_settings_scan_level
	}

	#Optional
	defined_tags = {"foo-namespace.bar-key"= "value"}
	display_name = var.container_scan_recipe_display_name
	freeform_tags = {"bar-key"= "value"}
	image_count = var.container_scan_recipe_image_count
}
```

## Argument Reference

The following arguments are supported:

* `compartment_id` - (Required) (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container scan recipe's compartment
* `defined_tags` - (Optional) (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}` 
* `display_name` - (Optional) (Updatable) User friendly name of container scan recipe. If not present, will be auto-generated.
* `freeform_tags` - (Optional) (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}` 
* `image_count` - (Optional) (Updatable) This field is set equal to the number of images we want to scan in the first go when the recipe is created
* `scan_settings` - (Required) (Updatable) A collection of container scan settings
	* `scan_level` - (Required) (Updatable) The scan level


** IMPORTANT **
Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values

## Attributes Reference

The following attributes are exported:

* `compartment_id` - The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container scan recipe's compartment
* `defined_tags` - Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}` 
* `display_name` - User friendly name of container scan recipe
* `freeform_tags` - Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}` 
* `id` - The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan recipe. Immutable and generated on creation.
* `image_count` - This field is set equal to the number of images we want to scan in the first go when the recipe is created
* `scan_settings` - A collection of container scan settings
	* `scan_level` - The scan level
* `state` - The current state of the config.
* `system_tags` - Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}` 
* `time_created` - Date and time the recipe was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
* `time_updated` - Date and time the recipe was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://registry.terraform.io/providers/oracle/oci/latest/docs/guides/changing_timeouts) for certain operations:
	* `create` - (Defaults to 20 minutes), when creating the Container Scan Recipe
	* `update` - (Defaults to 20 minutes), when updating the Container Scan Recipe
	* `delete` - (Defaults to 20 minutes), when destroying the Container Scan Recipe


## Import

ContainerScanRecipes can be imported using the `id`, e.g.

```
$ terraform import oci_vulnerability_scanning_container_scan_recipe.test_container_scan_recipe "id"
```

